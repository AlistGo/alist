// Code generated by 'yaegi extract github.com/alist-org/alist/v3/internal/driver'. DO NOT EDIT.

package lib

import (
	"context"
	"github.com/alist-org/alist/v3/internal/driver"
	"github.com/alist-org/alist/v3/internal/model"
	"reflect"
)

func init() {
	Symbols["github.com/alist-org/alist/v3/internal/driver/driver"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"NewProgress": reflect.ValueOf(driver.NewProgress),

		// type definitions
		"Additional":         reflect.ValueOf((*driver.Additional)(nil)),
		"Config":             reflect.ValueOf((*driver.Config)(nil)),
		"Copy":               reflect.ValueOf((*driver.Copy)(nil)),
		"CopyResult":         reflect.ValueOf((*driver.CopyResult)(nil)),
		"Driver":             reflect.ValueOf((*driver.Driver)(nil)),
		"DriverPlugin":       reflect.ValueOf((*driver.DriverPlugin)(nil)),
		"DriverPluginResult": reflect.ValueOf((*driver.DriverPluginResult)(nil)),
		"GetRooter":          reflect.ValueOf((*driver.GetRooter)(nil)),
		"Getter":             reflect.ValueOf((*driver.Getter)(nil)),
		"IRootId":            reflect.ValueOf((*driver.IRootId)(nil)),
		"IRootPath":          reflect.ValueOf((*driver.IRootPath)(nil)),
		"Info":               reflect.ValueOf((*driver.Info)(nil)),
		"Item":               reflect.ValueOf((*driver.Item)(nil)),
		"Meta":               reflect.ValueOf((*driver.Meta)(nil)),
		"Mkdir":              reflect.ValueOf((*driver.Mkdir)(nil)),
		"MkdirResult":        reflect.ValueOf((*driver.MkdirResult)(nil)),
		"Move":               reflect.ValueOf((*driver.Move)(nil)),
		"MoveResult":         reflect.ValueOf((*driver.MoveResult)(nil)),
		"Other":              reflect.ValueOf((*driver.Other)(nil)),
		"Progress":           reflect.ValueOf((*driver.Progress)(nil)),
		"Put":                reflect.ValueOf((*driver.Put)(nil)),
		"PutResult":          reflect.ValueOf((*driver.PutResult)(nil)),
		"Reader":             reflect.ValueOf((*driver.Reader)(nil)),
		"Remove":             reflect.ValueOf((*driver.Remove)(nil)),
		"Rename":             reflect.ValueOf((*driver.Rename)(nil)),
		"RenameResult":       reflect.ValueOf((*driver.RenameResult)(nil)),
		"RootID":             reflect.ValueOf((*driver.RootID)(nil)),
		"RootPath":           reflect.ValueOf((*driver.RootPath)(nil)),
		"Select":             reflect.ValueOf((*driver.Select)(nil)),
		"UpdateProgress":     reflect.ValueOf((*driver.UpdateProgress)(nil)),

		// interface wrapper definitions
		"_Additional":         reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_Additional)(nil)),
		"_Copy":               reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_Copy)(nil)),
		"_CopyResult":         reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_CopyResult)(nil)),
		"_Driver":             reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_Driver)(nil)),
		"_DriverPlugin":       reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_DriverPlugin)(nil)),
		"_DriverPluginResult": reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_DriverPluginResult)(nil)),
		"_GetRooter":          reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_GetRooter)(nil)),
		"_Getter":             reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_Getter)(nil)),
		"_IRootId":            reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_IRootId)(nil)),
		"_IRootPath":          reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_IRootPath)(nil)),
		"_Meta":               reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_Meta)(nil)),
		"_Mkdir":              reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_Mkdir)(nil)),
		"_MkdirResult":        reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_MkdirResult)(nil)),
		"_Move":               reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_Move)(nil)),
		"_MoveResult":         reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_MoveResult)(nil)),
		"_Other":              reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_Other)(nil)),
		"_Put":                reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_Put)(nil)),
		"_PutResult":          reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_PutResult)(nil)),
		"_Reader":             reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_Reader)(nil)),
		"_Remove":             reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_Remove)(nil)),
		"_Rename":             reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_Rename)(nil)),
		"_RenameResult":       reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_driver_RenameResult)(nil)),
	}
}

// _github_com_alist_org_alist_v3_internal_driver_Additional is an interface wrapper for Additional type
type _github_com_alist_org_alist_v3_internal_driver_Additional struct {
	IValue interface{}
}

// _github_com_alist_org_alist_v3_internal_driver_Copy is an interface wrapper for Copy type
type _github_com_alist_org_alist_v3_internal_driver_Copy struct {
	IValue interface{}
	WCopy  func(ctx context.Context, srcObj model.Obj, dstDir model.Obj) error
}

func (W _github_com_alist_org_alist_v3_internal_driver_Copy) Copy(ctx context.Context, srcObj model.Obj, dstDir model.Obj) error {
	return W.WCopy(ctx, srcObj, dstDir)
}

// _github_com_alist_org_alist_v3_internal_driver_CopyResult is an interface wrapper for CopyResult type
type _github_com_alist_org_alist_v3_internal_driver_CopyResult struct {
	IValue interface{}
	WCopy  func(ctx context.Context, srcObj model.Obj, dstDir model.Obj) (model.Obj, error)
}

func (W _github_com_alist_org_alist_v3_internal_driver_CopyResult) Copy(ctx context.Context, srcObj model.Obj, dstDir model.Obj) (model.Obj, error) {
	return W.WCopy(ctx, srcObj, dstDir)
}

// _github_com_alist_org_alist_v3_internal_driver_Driver is an interface wrapper for Driver type
type _github_com_alist_org_alist_v3_internal_driver_Driver struct {
	IValue       interface{}
	WConfig      func() driver.Config
	WDrop        func(ctx context.Context) error
	WGetAddition func() driver.Additional
	WGetStorage  func() *model.Storage
	WInit        func(ctx context.Context) error
	WLink        func(ctx context.Context, file model.Obj, args model.LinkArgs) (*model.Link, error)
	WList        func(ctx context.Context, dir model.Obj, args model.ListArgs) ([]model.Obj, error)
	WSetStorage  func(a0 model.Storage)
}

func (W _github_com_alist_org_alist_v3_internal_driver_Driver) Config() driver.Config {
	return W.WConfig()
}
func (W _github_com_alist_org_alist_v3_internal_driver_Driver) Drop(ctx context.Context) error {
	return W.WDrop(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_driver_Driver) GetAddition() driver.Additional {
	return W.WGetAddition()
}
func (W _github_com_alist_org_alist_v3_internal_driver_Driver) GetStorage() *model.Storage {
	return W.WGetStorage()
}
func (W _github_com_alist_org_alist_v3_internal_driver_Driver) Init(ctx context.Context) error {
	return W.WInit(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_driver_Driver) Link(ctx context.Context, file model.Obj, args model.LinkArgs) (*model.Link, error) {
	return W.WLink(ctx, file, args)
}
func (W _github_com_alist_org_alist_v3_internal_driver_Driver) List(ctx context.Context, dir model.Obj, args model.ListArgs) ([]model.Obj, error) {
	return W.WList(ctx, dir, args)
}
func (W _github_com_alist_org_alist_v3_internal_driver_Driver) SetStorage(a0 model.Storage) {
	W.WSetStorage(a0)
}

// _github_com_alist_org_alist_v3_internal_driver_DriverPlugin is an interface wrapper for DriverPlugin type
type _github_com_alist_org_alist_v3_internal_driver_DriverPlugin struct {
	IValue       interface{}
	WConfig      func() driver.Config
	WCopy        func(ctx context.Context, srcObj model.Obj, dstDir model.Obj) error
	WDrop        func(ctx context.Context) error
	WGetAddition func() driver.Additional
	WGetRoot     func(ctx context.Context) (model.Obj, error)
	WGetStorage  func() *model.Storage
	WInit        func(ctx context.Context) error
	WLink        func(ctx context.Context, file model.Obj, args model.LinkArgs) (*model.Link, error)
	WList        func(ctx context.Context, dir model.Obj, args model.ListArgs) ([]model.Obj, error)
	WMakeDir     func(ctx context.Context, parentDir model.Obj, dirName string) error
	WMove        func(ctx context.Context, srcObj model.Obj, dstDir model.Obj) error
	WPut         func(ctx context.Context, dstDir model.Obj, stream model.FileStreamer, up driver.UpdateProgress) error
	WRemove      func(ctx context.Context, obj model.Obj) error
	WRename      func(ctx context.Context, srcObj model.Obj, newName string) error
	WSetStorage  func(a0 model.Storage)
}

func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) Config() driver.Config {
	return W.WConfig()
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) Copy(ctx context.Context, srcObj model.Obj, dstDir model.Obj) error {
	return W.WCopy(ctx, srcObj, dstDir)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) Drop(ctx context.Context) error {
	return W.WDrop(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) GetAddition() driver.Additional {
	return W.WGetAddition()
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) GetRoot(ctx context.Context) (model.Obj, error) {
	return W.WGetRoot(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) GetStorage() *model.Storage {
	return W.WGetStorage()
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) Init(ctx context.Context) error {
	return W.WInit(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) Link(ctx context.Context, file model.Obj, args model.LinkArgs) (*model.Link, error) {
	return W.WLink(ctx, file, args)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) List(ctx context.Context, dir model.Obj, args model.ListArgs) ([]model.Obj, error) {
	return W.WList(ctx, dir, args)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) MakeDir(ctx context.Context, parentDir model.Obj, dirName string) error {
	return W.WMakeDir(ctx, parentDir, dirName)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) Move(ctx context.Context, srcObj model.Obj, dstDir model.Obj) error {
	return W.WMove(ctx, srcObj, dstDir)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) Put(ctx context.Context, dstDir model.Obj, stream model.FileStreamer, up driver.UpdateProgress) error {
	return W.WPut(ctx, dstDir, stream, up)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) Remove(ctx context.Context, obj model.Obj) error {
	return W.WRemove(ctx, obj)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) Rename(ctx context.Context, srcObj model.Obj, newName string) error {
	return W.WRename(ctx, srcObj, newName)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPlugin) SetStorage(a0 model.Storage) {
	W.WSetStorage(a0)
}

// _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult is an interface wrapper for DriverPluginResult type
type _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult struct {
	IValue       interface{}
	WConfig      func() driver.Config
	WCopy        func(ctx context.Context, srcObj model.Obj, dstDir model.Obj) (model.Obj, error)
	WDrop        func(ctx context.Context) error
	WGetAddition func() driver.Additional
	WGetRoot     func(ctx context.Context) (model.Obj, error)
	WGetStorage  func() *model.Storage
	WInit        func(ctx context.Context) error
	WLink        func(ctx context.Context, file model.Obj, args model.LinkArgs) (*model.Link, error)
	WList        func(ctx context.Context, dir model.Obj, args model.ListArgs) ([]model.Obj, error)
	WMakeDir     func(ctx context.Context, parentDir model.Obj, dirName string) (model.Obj, error)
	WMove        func(ctx context.Context, srcObj model.Obj, dstDir model.Obj) (model.Obj, error)
	WPut         func(ctx context.Context, dstDir model.Obj, stream model.FileStreamer, up driver.UpdateProgress) (model.Obj, error)
	WRemove      func(ctx context.Context, obj model.Obj) error
	WRename      func(ctx context.Context, srcObj model.Obj, newName string) (model.Obj, error)
	WSetStorage  func(a0 model.Storage)
}

func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) Config() driver.Config {
	return W.WConfig()
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) Copy(ctx context.Context, srcObj model.Obj, dstDir model.Obj) (model.Obj, error) {
	return W.WCopy(ctx, srcObj, dstDir)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) Drop(ctx context.Context) error {
	return W.WDrop(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) GetAddition() driver.Additional {
	return W.WGetAddition()
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) GetRoot(ctx context.Context) (model.Obj, error) {
	return W.WGetRoot(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) GetStorage() *model.Storage {
	return W.WGetStorage()
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) Init(ctx context.Context) error {
	return W.WInit(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) Link(ctx context.Context, file model.Obj, args model.LinkArgs) (*model.Link, error) {
	return W.WLink(ctx, file, args)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) List(ctx context.Context, dir model.Obj, args model.ListArgs) ([]model.Obj, error) {
	return W.WList(ctx, dir, args)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) MakeDir(ctx context.Context, parentDir model.Obj, dirName string) (model.Obj, error) {
	return W.WMakeDir(ctx, parentDir, dirName)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) Move(ctx context.Context, srcObj model.Obj, dstDir model.Obj) (model.Obj, error) {
	return W.WMove(ctx, srcObj, dstDir)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) Put(ctx context.Context, dstDir model.Obj, stream model.FileStreamer, up driver.UpdateProgress) (model.Obj, error) {
	return W.WPut(ctx, dstDir, stream, up)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) Remove(ctx context.Context, obj model.Obj) error {
	return W.WRemove(ctx, obj)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) Rename(ctx context.Context, srcObj model.Obj, newName string) (model.Obj, error) {
	return W.WRename(ctx, srcObj, newName)
}
func (W _github_com_alist_org_alist_v3_internal_driver_DriverPluginResult) SetStorage(a0 model.Storage) {
	W.WSetStorage(a0)
}

// _github_com_alist_org_alist_v3_internal_driver_GetRooter is an interface wrapper for GetRooter type
type _github_com_alist_org_alist_v3_internal_driver_GetRooter struct {
	IValue   interface{}
	WGetRoot func(ctx context.Context) (model.Obj, error)
}

func (W _github_com_alist_org_alist_v3_internal_driver_GetRooter) GetRoot(ctx context.Context) (model.Obj, error) {
	return W.WGetRoot(ctx)
}

// _github_com_alist_org_alist_v3_internal_driver_Getter is an interface wrapper for Getter type
type _github_com_alist_org_alist_v3_internal_driver_Getter struct {
	IValue interface{}
	WGet   func(ctx context.Context, path string) (model.Obj, error)
}

func (W _github_com_alist_org_alist_v3_internal_driver_Getter) Get(ctx context.Context, path string) (model.Obj, error) {
	return W.WGet(ctx, path)
}

// _github_com_alist_org_alist_v3_internal_driver_IRootId is an interface wrapper for IRootId type
type _github_com_alist_org_alist_v3_internal_driver_IRootId struct {
	IValue     interface{}
	WGetRootId func() string
}

func (W _github_com_alist_org_alist_v3_internal_driver_IRootId) GetRootId() string {
	return W.WGetRootId()
}

// _github_com_alist_org_alist_v3_internal_driver_IRootPath is an interface wrapper for IRootPath type
type _github_com_alist_org_alist_v3_internal_driver_IRootPath struct {
	IValue       interface{}
	WGetRootPath func() string
}

func (W _github_com_alist_org_alist_v3_internal_driver_IRootPath) GetRootPath() string {
	return W.WGetRootPath()
}

// _github_com_alist_org_alist_v3_internal_driver_Meta is an interface wrapper for Meta type
type _github_com_alist_org_alist_v3_internal_driver_Meta struct {
	IValue       interface{}
	WConfig      func() driver.Config
	WDrop        func(ctx context.Context) error
	WGetAddition func() driver.Additional
	WGetStorage  func() *model.Storage
	WInit        func(ctx context.Context) error
	WSetStorage  func(a0 model.Storage)
}

func (W _github_com_alist_org_alist_v3_internal_driver_Meta) Config() driver.Config {
	return W.WConfig()
}
func (W _github_com_alist_org_alist_v3_internal_driver_Meta) Drop(ctx context.Context) error {
	return W.WDrop(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_driver_Meta) GetAddition() driver.Additional {
	return W.WGetAddition()
}
func (W _github_com_alist_org_alist_v3_internal_driver_Meta) GetStorage() *model.Storage {
	return W.WGetStorage()
}
func (W _github_com_alist_org_alist_v3_internal_driver_Meta) Init(ctx context.Context) error {
	return W.WInit(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_driver_Meta) SetStorage(a0 model.Storage) {
	W.WSetStorage(a0)
}

// _github_com_alist_org_alist_v3_internal_driver_Mkdir is an interface wrapper for Mkdir type
type _github_com_alist_org_alist_v3_internal_driver_Mkdir struct {
	IValue   interface{}
	WMakeDir func(ctx context.Context, parentDir model.Obj, dirName string) error
}

func (W _github_com_alist_org_alist_v3_internal_driver_Mkdir) MakeDir(ctx context.Context, parentDir model.Obj, dirName string) error {
	return W.WMakeDir(ctx, parentDir, dirName)
}

// _github_com_alist_org_alist_v3_internal_driver_MkdirResult is an interface wrapper for MkdirResult type
type _github_com_alist_org_alist_v3_internal_driver_MkdirResult struct {
	IValue   interface{}
	WMakeDir func(ctx context.Context, parentDir model.Obj, dirName string) (model.Obj, error)
}

func (W _github_com_alist_org_alist_v3_internal_driver_MkdirResult) MakeDir(ctx context.Context, parentDir model.Obj, dirName string) (model.Obj, error) {
	return W.WMakeDir(ctx, parentDir, dirName)
}

// _github_com_alist_org_alist_v3_internal_driver_Move is an interface wrapper for Move type
type _github_com_alist_org_alist_v3_internal_driver_Move struct {
	IValue interface{}
	WMove  func(ctx context.Context, srcObj model.Obj, dstDir model.Obj) error
}

func (W _github_com_alist_org_alist_v3_internal_driver_Move) Move(ctx context.Context, srcObj model.Obj, dstDir model.Obj) error {
	return W.WMove(ctx, srcObj, dstDir)
}

// _github_com_alist_org_alist_v3_internal_driver_MoveResult is an interface wrapper for MoveResult type
type _github_com_alist_org_alist_v3_internal_driver_MoveResult struct {
	IValue interface{}
	WMove  func(ctx context.Context, srcObj model.Obj, dstDir model.Obj) (model.Obj, error)
}

func (W _github_com_alist_org_alist_v3_internal_driver_MoveResult) Move(ctx context.Context, srcObj model.Obj, dstDir model.Obj) (model.Obj, error) {
	return W.WMove(ctx, srcObj, dstDir)
}

// _github_com_alist_org_alist_v3_internal_driver_Other is an interface wrapper for Other type
type _github_com_alist_org_alist_v3_internal_driver_Other struct {
	IValue interface{}
	WOther func(ctx context.Context, args model.OtherArgs) (interface{}, error)
}

func (W _github_com_alist_org_alist_v3_internal_driver_Other) Other(ctx context.Context, args model.OtherArgs) (interface{}, error) {
	return W.WOther(ctx, args)
}

// _github_com_alist_org_alist_v3_internal_driver_Put is an interface wrapper for Put type
type _github_com_alist_org_alist_v3_internal_driver_Put struct {
	IValue interface{}
	WPut   func(ctx context.Context, dstDir model.Obj, stream model.FileStreamer, up driver.UpdateProgress) error
}

func (W _github_com_alist_org_alist_v3_internal_driver_Put) Put(ctx context.Context, dstDir model.Obj, stream model.FileStreamer, up driver.UpdateProgress) error {
	return W.WPut(ctx, dstDir, stream, up)
}

// _github_com_alist_org_alist_v3_internal_driver_PutResult is an interface wrapper for PutResult type
type _github_com_alist_org_alist_v3_internal_driver_PutResult struct {
	IValue interface{}
	WPut   func(ctx context.Context, dstDir model.Obj, stream model.FileStreamer, up driver.UpdateProgress) (model.Obj, error)
}

func (W _github_com_alist_org_alist_v3_internal_driver_PutResult) Put(ctx context.Context, dstDir model.Obj, stream model.FileStreamer, up driver.UpdateProgress) (model.Obj, error) {
	return W.WPut(ctx, dstDir, stream, up)
}

// _github_com_alist_org_alist_v3_internal_driver_Reader is an interface wrapper for Reader type
type _github_com_alist_org_alist_v3_internal_driver_Reader struct {
	IValue interface{}
	WLink  func(ctx context.Context, file model.Obj, args model.LinkArgs) (*model.Link, error)
	WList  func(ctx context.Context, dir model.Obj, args model.ListArgs) ([]model.Obj, error)
}

func (W _github_com_alist_org_alist_v3_internal_driver_Reader) Link(ctx context.Context, file model.Obj, args model.LinkArgs) (*model.Link, error) {
	return W.WLink(ctx, file, args)
}
func (W _github_com_alist_org_alist_v3_internal_driver_Reader) List(ctx context.Context, dir model.Obj, args model.ListArgs) ([]model.Obj, error) {
	return W.WList(ctx, dir, args)
}

// _github_com_alist_org_alist_v3_internal_driver_Remove is an interface wrapper for Remove type
type _github_com_alist_org_alist_v3_internal_driver_Remove struct {
	IValue  interface{}
	WRemove func(ctx context.Context, obj model.Obj) error
}

func (W _github_com_alist_org_alist_v3_internal_driver_Remove) Remove(ctx context.Context, obj model.Obj) error {
	return W.WRemove(ctx, obj)
}

// _github_com_alist_org_alist_v3_internal_driver_Rename is an interface wrapper for Rename type
type _github_com_alist_org_alist_v3_internal_driver_Rename struct {
	IValue  interface{}
	WRename func(ctx context.Context, srcObj model.Obj, newName string) error
}

func (W _github_com_alist_org_alist_v3_internal_driver_Rename) Rename(ctx context.Context, srcObj model.Obj, newName string) error {
	return W.WRename(ctx, srcObj, newName)
}

// _github_com_alist_org_alist_v3_internal_driver_RenameResult is an interface wrapper for RenameResult type
type _github_com_alist_org_alist_v3_internal_driver_RenameResult struct {
	IValue  interface{}
	WRename func(ctx context.Context, srcObj model.Obj, newName string) (model.Obj, error)
}

func (W _github_com_alist_org_alist_v3_internal_driver_RenameResult) Rename(ctx context.Context, srcObj model.Obj, newName string) (model.Obj, error) {
	return W.WRename(ctx, srcObj, newName)
}
