// Code generated by 'yaegi extract github.com/aws/aws-sdk-go/aws/credentials'. DO NOT EDIT.

package lib

import (
	"context"
	"github.com/aws/aws-sdk-go/aws/credentials"
	"go/constant"
	"go/token"
	"reflect"
	"time"
)

func init() {
	Symbols["github.com/aws/aws-sdk-go/aws/credentials/credentials"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AnonymousCredentials":             reflect.ValueOf(&credentials.AnonymousCredentials).Elem(),
		"EnvProviderName":                  reflect.ValueOf(constant.MakeFromLiteral("\"EnvProvider\"", token.STRING, 0)),
		"ErrAccessKeyIDNotFound":           reflect.ValueOf(&credentials.ErrAccessKeyIDNotFound).Elem(),
		"ErrNoValidProvidersFoundInChain":  reflect.ValueOf(&credentials.ErrNoValidProvidersFoundInChain).Elem(),
		"ErrSecretAccessKeyNotFound":       reflect.ValueOf(&credentials.ErrSecretAccessKeyNotFound).Elem(),
		"ErrSharedCredentialsHomeNotFound": reflect.ValueOf(&credentials.ErrSharedCredentialsHomeNotFound).Elem(),
		"ErrStaticCredentialsEmpty":        reflect.ValueOf(&credentials.ErrStaticCredentialsEmpty).Elem(),
		"NewChainCredentials":              reflect.ValueOf(credentials.NewChainCredentials),
		"NewCredentials":                   reflect.ValueOf(credentials.NewCredentials),
		"NewEnvCredentials":                reflect.ValueOf(credentials.NewEnvCredentials),
		"NewSharedCredentials":             reflect.ValueOf(credentials.NewSharedCredentials),
		"NewStaticCredentials":             reflect.ValueOf(credentials.NewStaticCredentials),
		"NewStaticCredentialsFromCreds":    reflect.ValueOf(credentials.NewStaticCredentialsFromCreds),
		"SharedCredsProviderName":          reflect.ValueOf(constant.MakeFromLiteral("\"SharedCredentialsProvider\"", token.STRING, 0)),
		"StaticProviderName":               reflect.ValueOf(constant.MakeFromLiteral("\"StaticProvider\"", token.STRING, 0)),

		// type definitions
		"ChainProvider":             reflect.ValueOf((*credentials.ChainProvider)(nil)),
		"Context":                   reflect.ValueOf((*credentials.Context)(nil)),
		"Credentials":               reflect.ValueOf((*credentials.Credentials)(nil)),
		"EnvProvider":               reflect.ValueOf((*credentials.EnvProvider)(nil)),
		"ErrorProvider":             reflect.ValueOf((*credentials.ErrorProvider)(nil)),
		"Expirer":                   reflect.ValueOf((*credentials.Expirer)(nil)),
		"Expiry":                    reflect.ValueOf((*credentials.Expiry)(nil)),
		"Provider":                  reflect.ValueOf((*credentials.Provider)(nil)),
		"ProviderWithContext":       reflect.ValueOf((*credentials.ProviderWithContext)(nil)),
		"SharedCredentialsProvider": reflect.ValueOf((*credentials.SharedCredentialsProvider)(nil)),
		"StaticProvider":            reflect.ValueOf((*credentials.StaticProvider)(nil)),
		"Value":                     reflect.ValueOf((*credentials.Value)(nil)),

		// interface wrapper definitions
		"_Context":             reflect.ValueOf((*_github_com_aws_aws_sdk_go_aws_credentials_Context)(nil)),
		"_Expirer":             reflect.ValueOf((*_github_com_aws_aws_sdk_go_aws_credentials_Expirer)(nil)),
		"_Provider":            reflect.ValueOf((*_github_com_aws_aws_sdk_go_aws_credentials_Provider)(nil)),
		"_ProviderWithContext": reflect.ValueOf((*_github_com_aws_aws_sdk_go_aws_credentials_ProviderWithContext)(nil)),
	}
}

// _github_com_aws_aws_sdk_go_aws_credentials_Context is an interface wrapper for Context type
type _github_com_aws_aws_sdk_go_aws_credentials_Context struct {
	IValue    interface{}
	WDeadline func() (deadline time.Time, ok bool)
	WDone     func() <-chan struct{}
	WErr      func() error
	WValue    func(key any) any
}

func (W _github_com_aws_aws_sdk_go_aws_credentials_Context) Deadline() (deadline time.Time, ok bool) {
	return W.WDeadline()
}
func (W _github_com_aws_aws_sdk_go_aws_credentials_Context) Done() <-chan struct{} {
	return W.WDone()
}
func (W _github_com_aws_aws_sdk_go_aws_credentials_Context) Err() error {
	return W.WErr()
}
func (W _github_com_aws_aws_sdk_go_aws_credentials_Context) Value(key any) any {
	return W.WValue(key)
}

// _github_com_aws_aws_sdk_go_aws_credentials_Expirer is an interface wrapper for Expirer type
type _github_com_aws_aws_sdk_go_aws_credentials_Expirer struct {
	IValue     interface{}
	WExpiresAt func() time.Time
}

func (W _github_com_aws_aws_sdk_go_aws_credentials_Expirer) ExpiresAt() time.Time {
	return W.WExpiresAt()
}

// _github_com_aws_aws_sdk_go_aws_credentials_Provider is an interface wrapper for Provider type
type _github_com_aws_aws_sdk_go_aws_credentials_Provider struct {
	IValue     interface{}
	WIsExpired func() bool
	WRetrieve  func() (credentials.Value, error)
}

func (W _github_com_aws_aws_sdk_go_aws_credentials_Provider) IsExpired() bool {
	return W.WIsExpired()
}
func (W _github_com_aws_aws_sdk_go_aws_credentials_Provider) Retrieve() (credentials.Value, error) {
	return W.WRetrieve()
}

// _github_com_aws_aws_sdk_go_aws_credentials_ProviderWithContext is an interface wrapper for ProviderWithContext type
type _github_com_aws_aws_sdk_go_aws_credentials_ProviderWithContext struct {
	IValue               interface{}
	WIsExpired           func() bool
	WRetrieve            func() (credentials.Value, error)
	WRetrieveWithContext func(a0 context.Context) (credentials.Value, error)
}

func (W _github_com_aws_aws_sdk_go_aws_credentials_ProviderWithContext) IsExpired() bool {
	return W.WIsExpired()
}
func (W _github_com_aws_aws_sdk_go_aws_credentials_ProviderWithContext) Retrieve() (credentials.Value, error) {
	return W.WRetrieve()
}
func (W _github_com_aws_aws_sdk_go_aws_credentials_ProviderWithContext) RetrieveWithContext(a0 context.Context) (credentials.Value, error) {
	return W.WRetrieveWithContext(a0)
}
