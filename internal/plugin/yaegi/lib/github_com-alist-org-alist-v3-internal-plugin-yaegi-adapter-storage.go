// Code generated by 'yaegi extract github.com/alist-org/alist/v3/internal/plugin/yaegi/adapter/storage'. DO NOT EDIT.

package lib

import (
	"context"
	"github.com/alist-org/alist/v3/internal/driver"
	"github.com/alist-org/alist/v3/internal/model"
	"github.com/alist-org/alist/v3/internal/plugin/yaegi/adapter/storage"
	"reflect"
)

func init() {
	Symbols["github.com/alist-org/alist/v3/internal/plugin/yaegi/adapter/storage/yaegi_storage"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"RegisterPluginDriver":         reflect.ValueOf(yaegi_storage.RegisterPluginDriver),
		"RegisterPluginResultDriver":   reflect.ValueOf(yaegi_storage.RegisterPluginResultDriver),
		"UnRegisterPluginDriver":       reflect.ValueOf(yaegi_storage.UnRegisterPluginDriver),
		"UnRegisterPluginResultDriver": reflect.ValueOf(yaegi_storage.UnRegisterPluginResultDriver),

		// type definitions
		"DriverPlugin":       reflect.ValueOf((*yaegi_storage.DriverPlugin)(nil)),
		"DriverPluginResult": reflect.ValueOf((*yaegi_storage.DriverPluginResult)(nil)),
		"ObjectHelper":       reflect.ValueOf((*yaegi_storage.ObjectHelper)(nil)),
		"PluginNew":          reflect.ValueOf((*yaegi_storage.PluginNew)(nil)),
		"PluginResultNew":    reflect.ValueOf((*yaegi_storage.PluginResultNew)(nil)),

		// interface wrapper definitions
		"_DriverPlugin":       reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin)(nil)),
		"_DriverPluginResult": reflect.ValueOf((*_github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult)(nil)),
	}
}

// _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin is an interface wrapper for DriverPlugin type
type _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin struct {
	IValue       interface{}
	WConfig      func() driver.Config
	WCopy        func(ctx context.Context, srcObj model.Obj, dstDir model.Obj) error
	WDrop        func(ctx context.Context) error
	WGetAddition func() driver.Additional
	WGetRoot     func(ctx context.Context) (model.Obj, error)
	WGetStorage  func() *model.Storage
	WInit        func(ctx context.Context) error
	WLink        func(ctx context.Context, file model.Obj, args model.LinkArgs) (*model.Link, error)
	WList        func(ctx context.Context, dir model.Obj, args model.ListArgs) ([]model.Obj, error)
	WMakeDir     func(ctx context.Context, parentDir model.Obj, dirName string) error
	WMove        func(ctx context.Context, srcObj model.Obj, dstDir model.Obj) error
	WPut         func(ctx context.Context, dstDir model.Obj, stream model.FileStreamer, up driver.UpdateProgress) error
	WRemove      func(ctx context.Context, obj model.Obj) error
	WRename      func(ctx context.Context, srcObj model.Obj, newName string) error
	WSetStorage  func(a0 model.Storage)
}

func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) Config() driver.Config {
	return W.WConfig()
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) Copy(ctx context.Context, srcObj model.Obj, dstDir model.Obj) error {
	return W.WCopy(ctx, srcObj, dstDir)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) Drop(ctx context.Context) error {
	return W.WDrop(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) GetAddition() driver.Additional {
	return W.WGetAddition()
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) GetRoot(ctx context.Context) (model.Obj, error) {
	return W.WGetRoot(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) GetStorage() *model.Storage {
	return W.WGetStorage()
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) Init(ctx context.Context) error {
	return W.WInit(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) Link(ctx context.Context, file model.Obj, args model.LinkArgs) (*model.Link, error) {
	return W.WLink(ctx, file, args)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) List(ctx context.Context, dir model.Obj, args model.ListArgs) ([]model.Obj, error) {
	return W.WList(ctx, dir, args)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) MakeDir(ctx context.Context, parentDir model.Obj, dirName string) error {
	return W.WMakeDir(ctx, parentDir, dirName)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) Move(ctx context.Context, srcObj model.Obj, dstDir model.Obj) error {
	return W.WMove(ctx, srcObj, dstDir)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) Put(ctx context.Context, dstDir model.Obj, stream model.FileStreamer, up driver.UpdateProgress) error {
	return W.WPut(ctx, dstDir, stream, up)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) Remove(ctx context.Context, obj model.Obj) error {
	return W.WRemove(ctx, obj)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) Rename(ctx context.Context, srcObj model.Obj, newName string) error {
	return W.WRename(ctx, srcObj, newName)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPlugin) SetStorage(a0 model.Storage) {
	W.WSetStorage(a0)
}

// _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult is an interface wrapper for DriverPluginResult type
type _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult struct {
	IValue       interface{}
	WConfig      func() driver.Config
	WCopy        func(ctx context.Context, srcObj model.Obj, dstDir model.Obj) (model.Obj, error)
	WDrop        func(ctx context.Context) error
	WGetAddition func() driver.Additional
	WGetRoot     func(ctx context.Context) (model.Obj, error)
	WGetStorage  func() *model.Storage
	WInit        func(ctx context.Context) error
	WLink        func(ctx context.Context, file model.Obj, args model.LinkArgs) (*model.Link, error)
	WList        func(ctx context.Context, dir model.Obj, args model.ListArgs) ([]model.Obj, error)
	WMakeDir     func(ctx context.Context, parentDir model.Obj, dirName string) (model.Obj, error)
	WMove        func(ctx context.Context, srcObj model.Obj, dstDir model.Obj) (model.Obj, error)
	WPut         func(ctx context.Context, dstDir model.Obj, stream model.FileStreamer, up driver.UpdateProgress) (model.Obj, error)
	WRemove      func(ctx context.Context, obj model.Obj) error
	WRename      func(ctx context.Context, srcObj model.Obj, newName string) (model.Obj, error)
	WSetStorage  func(a0 model.Storage)
}

func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) Config() driver.Config {
	return W.WConfig()
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) Copy(ctx context.Context, srcObj model.Obj, dstDir model.Obj) (model.Obj, error) {
	return W.WCopy(ctx, srcObj, dstDir)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) Drop(ctx context.Context) error {
	return W.WDrop(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) GetAddition() driver.Additional {
	return W.WGetAddition()
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) GetRoot(ctx context.Context) (model.Obj, error) {
	return W.WGetRoot(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) GetStorage() *model.Storage {
	return W.WGetStorage()
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) Init(ctx context.Context) error {
	return W.WInit(ctx)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) Link(ctx context.Context, file model.Obj, args model.LinkArgs) (*model.Link, error) {
	return W.WLink(ctx, file, args)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) List(ctx context.Context, dir model.Obj, args model.ListArgs) ([]model.Obj, error) {
	return W.WList(ctx, dir, args)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) MakeDir(ctx context.Context, parentDir model.Obj, dirName string) (model.Obj, error) {
	return W.WMakeDir(ctx, parentDir, dirName)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) Move(ctx context.Context, srcObj model.Obj, dstDir model.Obj) (model.Obj, error) {
	return W.WMove(ctx, srcObj, dstDir)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) Put(ctx context.Context, dstDir model.Obj, stream model.FileStreamer, up driver.UpdateProgress) (model.Obj, error) {
	return W.WPut(ctx, dstDir, stream, up)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) Remove(ctx context.Context, obj model.Obj) error {
	return W.WRemove(ctx, obj)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) Rename(ctx context.Context, srcObj model.Obj, newName string) (model.Obj, error) {
	return W.WRename(ctx, srcObj, newName)
}
func (W _github_com_alist_org_alist_v3_internal_plugin_yaegi_adapter_storage_DriverPluginResult) SetStorage(a0 model.Storage) {
	W.WSetStorage(a0)
}
